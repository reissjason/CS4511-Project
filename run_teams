
#!/bin/bash
#  for-loopcmd.sh: for-loop with [list]
#+ generated by command substitution.

NUMBERS="012 013 014 015 023 024 025 034 035 045 123 124 125 134 135 145 234 235 245 345"

games=10

team_1_edge_points=0
team_2_edge_points=0
even_steven=0

for n1 in `echo $NUMBERS`  
do
  for n2 in `echo $NUMBERS`  
  do
  	echo ./run_games2 $games "$n1$n2"
  	./run_games2 $games "$n1$n2" > temp_team_results
  	cur_wins_1=` cat temp_team_results | perl -n -e'/(\d+)\s+Team 1 wins!!/ && print $1'`
  	cur_wins_2=` cat temp_team_results | perl -n -e'/(\d+)\s+Team 2 wins!!/ && print $1'`

	if [ $cur_wins_1 -eq $cur_wins_2 ]; then
		even_steven=$(($even_steven+1))  	
		echo "Teams were even"
	fi
  	
  	if [ $cur_wins_1 -gt $cur_wins_2 ]; then
  		team_1_edge_points=$(($team_1_edge_points+1))
  	else
		team_2_edge_points=$(($team_2_edge_points+1))
		echo "Team 2 had edge"
  	fi
  	
  	wins_1=$(($wins_1+$cur_wins_1))
	wins_2=$(($wins_2+$cur_wins_2))
	ties=$(($ties+` cat temp_team_results | perl -n -e'/(\d+)\s+ties!!/ && print $1'`))
  done
done

echo -e "total wins\t" $wins_1 " for Team 1"
echo -e "edge points\t" $team_1_edge_points " for Team 1"
echo -e "total wins\t" $wins_2 " for Team 2"
echo -e "edge points\t" $team_2_edge_points " for Team 2"
echo -e "total ties\t" $ties
echo -e "even stevens\t" $even_steven 
exit 0